$script = <<SCRIPT
#!/usr/bin/env bash
sudo apt-get install -y postgresql postgresql-client tree software-properties-common git-core openssl libssl-dev git vim curl zsh 
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -

wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && sudo dpkg -i erlang-solutions_1.0_all.deb
sudo apt-add-repository "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"
sudo apt-get update
sudo apt-get install inotify-tools esl-erlang elixir nodejs docker-ce build-essential apt-transport-https ca-certificates gnupg2  autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev git-core -y
sudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
if [ ! -d ~vagrant/.oh-my-zsh ]; then
      git clone https://github.com/robbyrussell/oh-my-zsh.git ~vagrant/.oh-my-zsh
      git clone https://github.com/cerico/dotfiles/ ~vagrant/dotfiles
fi
git clone https://github.com/rbenv/rbenv.git ~/.rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
rbenv install 2.4.3
rbenv global 2.4.3
echo "gem: --no-document" > ~/.gemrc
~/.rbenv/shims/gem install bundler
~/.rbenv/shims/gem install rails
ln -s ~vagrant/dotfiles/.zshrc ~vagrant/.zshrc
ln -s ~vagrant/dotfiles/.zprofile ~vagrant/.zprofile
ln -s ~vagrant/dotfiles/zfiles ~vagrant/zfiles
sudo chsh -s /bin/zsh vagrant

wget https://storage.googleapis.com/golang/go1.9.3.linux-amd64.tar.gz
sudo tar -xvf go1.9.3.linux-amd64.tar.gz
sudo mv go /usr/local
rm go1.9.3.linux-amd64.tar.gz

mix local.hex --force
mix archive.install https://github.com/phoenixframework/archives/raw/master/phx_new.ez --force
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "debian/jessie64"
  config.vm.define 'kemerovo'
  config.vm.hostname = 'kemerovo'
  config.vm.provision :shell, privileged: false, inline: $script
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
  end
  config.vm.synced_folder "../shared", "/shared"
  config.vm.network "forwarded_port", guest: 3100, host: 3100
  config.vm.network "forwarded_port", guest: 3000, host: 13000
  config.vm.network "forwarded_port", guest: 3001, host: 13001
  config.vm.network "forwarded_port", guest: 8000, host: 18000
  config.vm.network "forwarded_port", guest: 8080, host: 18080
end
